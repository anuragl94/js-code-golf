const getRedundantLyrics = (str) => {let lyricsArr = str.split("\n").join(", ").split(", ");const lyricsFreq = {}; const lyricsTOReplace = new Set(); lyricsArr.map((lyric) => { lyricsFreq[lyric] ? ( lyricsFreq[lyric]++, lyricsTOReplace.add(lyric)) : lyricsFreq[lyric] = 1; }); return Array.from(lyricsTOReplace); };
  
const compressStr = (str) => {const lyricsTOReplace = getRedundantLyrics(str); lyricsTOReplace.map((lyric, index) => str = str.replace(new RegExp(lyric, "g"), index)); return str; };
  
const extractStr = (compressedStr, redundantLyrics) => { redundantLyrics.map((lyric, index) => compressedStr = compressedStr.replace( new RegExp(index, "g"), lyric)); return compressedStr; };  